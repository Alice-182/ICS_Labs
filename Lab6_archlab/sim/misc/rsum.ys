# Name: 万金易
# ID :  519021911049

# Execution begins at address 0
        .pos 0
        irmovq  stack, %rsp          # Set up stack pointer
        call    main                 # Execute main program
        halt                         # Terminate program

# Sample linked list
        .align 8
ele1:
        .quad 0x00a
        .quad ele2
ele2:
        .quad 0x0b0
        .quad ele3
ele3:
        .quad 0xc00
        .quad 0
        
main:
        irmovq  ele1,%rdi               # save the 1st argument in %rdi
        call    rsum_list               # rsum_list(ele1)
        ret

# long rsum_list(list_ptr ls)
# ls point to the first element of the list, (last element).next == null
rsum_list:
        pushq   %rbx                    # save previous %rbx
        andq    %rdi,%rdi               # set CC
        je      test                    # if(!ls) jump to ret
        mrmovq  (%rdi),%rbx             # save ls->val at callee-save reg %rbx
        mrmovq 8(%rdi),%rdi            # set 1st argument ls->next at %rdi
        call    rsum_list               # Call rsum_list(ls->next)
        addq    %rbx,%rax               # %rax = val + rest
test:
        popq    %rbx                    # restore %rbx
        ret                          # return

# Stack starts here and grows to lower address
        .pos 0x200
stack:
