# Name: 万金易
# ID : 519021911049

# Execution begins at address 0
        .pos 0
        irmovq  stack, %rsp          # Set up stack pointer
        call    main                 # Execute main program
        halt                         # Terminate program

# Sample linked list
        .align 8
ele1:
        .quad 0x00a
        .quad ele2
ele2:
        .quad 0x0b0
        .quad ele3
ele3:
        .quad 0xc00
        .quad 0
        
main:
        irmovq  ele1,%rdi            # save the 1st argument in %rdi
        call    sum_list             # sum_list(ele1)
        ret

# long sum_list(list_ptr ls)
# ls point to the first element of the list, (last element).next == null
sum_list:
        xorq    %rax,%rax            # val = 0, %rax: val 
        irmovq  $8,%r9               # Consant 8
        andq    %rdi,%rdi            # set CC
        jmp     test                 # test for entering(!=0) loop
loop:
        mrmovq  (%rdi),%r8           # save ls->val at %r8
        addq    %r8,%rax             # add to val
        addq    %r9,%rdi             # %rdi = %rdi + 8
        mrmovq  (%rdi),%rdi          # save ls->next at %rdi
test:
        andq    %rdi,%rdi
        jne     loop                 # Stop when 0
        popq    %rbx                 # restore %rbx
        ret                          # return

# Stack starts here and grows to lower address
        .pos 0x200
stack:
